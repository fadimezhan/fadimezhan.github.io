<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Github | Fadime Özhan]]></title>
  <link href="http://fadimezhan.github.io/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://fadimezhan.github.io/"/>
  <updated>2017-02-09T14:54:57+03:00</updated>
  <id>http://fadimezhan.github.io/</id>
  <author>
    <name><![CDATA[Fadime Özhan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Baska Bilgisayara Octopress Yapılandırması]]></title>
    <link href="http://fadimezhan.github.io/blog/2017/02/06/baska-bilgisayara-octopress-yapilandirmasi/"/>
    <updated>2017-02-06T17:21:15+03:00</updated>
    <id>http://fadimezhan.github.io/blog/2017/02/06/baska-bilgisayara-octopress-yapilandirmasi</id>
    <content type="html"><![CDATA[<p>Birden fazla bilgisayar kullananlar veya bilgisayarına format atanlar
için octopressi yeniden yapılandırmayı göstereceğim.</p>

<p>Octopress reposunda iki dal bulunur; master ve source. Source kısmı blog
yazılarımızı oluşturduğumuz dal, master kısmı ise tüm bloğu barındıran
daldır. Kurulum aşamasında master dalındaki dosyalar <code>_deploy</code> klasörü içinde oluşturulur. Alt çizgi içermesinin sebebi ise diğer dalları push ettiğinizde alt çizgi bulunan dosyaları çekmez. Böylece <code>rake deploy</code> komutunuzla master dalınız güncellenir.</p>

<!-- More -->


<p>öncelikle github sayfasından repomuzun url adresini kopyalıyoruz ve
 terminale geçiyoruz:</p>

<pre><code class="sh">$ git clone -b source git@github.com:username/username.github.io.git octopress
</code></pre>

<p>Source dalımızdaki dosyaları bilgisayarımıza octopress klasörü içinde kopyaladı.Şimdi octopress dizinine geçip master dalımızdaki dosyaları _deploy dizini içine klonluyoruz:</p>

<pre><code class="sh">$ cd octopress
$ git clone git@github.com:username/username.github.io.git _deploy
</code></pre>

<p>Şimdi dosyalarımızı yapılandırmak için gerekli komutları yazalım:</p>

<pre><code class="sh">$ gem install bundler
$ rbenv rehash
$ bundle install
$ rake setup_github_pages
</code></pre>

<p>Son komuttan sonra url adresi isterse, github sayfasından kopyaladığımız repo url adresini yapıştırıyoruz.</p>

<p>Artık diğer bilgisayarınızdaki octopress bloğunuzun local kopyası oluştu. Eğer birden fazla bilgisayardan blog yazmak istiyorsanız pull-push işlemlerine dikkat etmeniz gerekecektir.</p>

<p>Blog yazınızı oluşturduğunuz bilgisayarda:</p>

<pre><code class="sh">$ rake generate
$ git add .
$ git commit -am “Configuration for another computer.”
$ git push origin source  # source dalının (remote) güncellenmesi
$ rake deploy             # master dalının (remote) güncellenmesi
</code></pre>

<p>Daha sonra başka bilgisayarda son değişiklikleri bilgisayarınınza çekmeniz gerkecek:
<code>sh
$ cd octopress
$ git pull origin source  # source dalının (remote) güncellenmesi
$ cd ./_deploy
$ git pull origin master  # master dalının (remote) güncellenmesi
</code></p>

<h3>Şimdi bloğumuza biraz içerik ekleyelim.</h3>

<p>Yeni blog yazısı oluşturmak için ;
<code>sh
$ rake new_post[“title”]
</code>
blog yazıları <code>source/_posts</code> dizini altında depolanır.
 Yukarıdaki komutla jekyll isimlendirmesine göre, YYYY-MM-DD-post-title.markdown dosyası oluşturulur ve text editörde açtığınızda yaml frontmatter kod bloğunu görürsünüz. Bu kod bloğu sayfaların ve postların nasıl işleneceğini söyler.</p>

<p>Yeni sayfa oluşturmak için ;
<code>sh
$ rake new_page[super-awesome]  # /source/super-awesome/index.markdown  dosyası oluşturur.
</code>
ya da;</p>

<pre><code class="sh">$ rake new_page[super-awesome/page.html]  # /source/super-awesome/page.html  dosyası oluşturur.
</code></pre>

<p>bazı komutlar ;</p>

<pre><code class="sh">$ rake generate   # postları ve sayfaları public dizini içinde oluşturur.
$ rake watch      # değişiklikler için source/ ve sass/  dizinlerini izler
$ rake preview    # izler ve  http://localhost:4000  adresindeki web server’a bağlar
</code></pre>

<p> Eğer postlarınızda yayınlamadan çalışmak istiyorsanız <code>published: false</code> kodunu yaml frontmatter kısmına ekleyin. Localhostunuzda <code>rake preview</code> komutuyla izleyebilirsiniz ama bu postunuz <code>rake genereate</code> yaptığınızda yayınlanmayacaktır.</p>
]]></content>
  </entry>
  
</feed>
